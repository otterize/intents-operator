// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package environments

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// CreateEnvCreateEnvironment includes the requested fields of the GraphQL type Environment.
type CreateEnvCreateEnvironment struct {
	EnvFields `json:"-"`
}

// GetOrg returns CreateEnvCreateEnvironment.Org, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetOrg() EnvFieldsOrgOrganization { return v.EnvFields.Org }

// GetId returns CreateEnvCreateEnvironment.Id, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetId() string { return v.EnvFields.Id }

// GetName returns CreateEnvCreateEnvironment.Name, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetName() string { return v.EnvFields.Name }

// GetLabels returns CreateEnvCreateEnvironment.Labels, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetLabels() []EnvFieldsLabelsLabel { return v.EnvFields.Labels }

// GetIntentsCount returns CreateEnvCreateEnvironment.IntentsCount, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetIntentsCount() int { return v.EnvFields.IntentsCount }

// GetIntegrationCount returns CreateEnvCreateEnvironment.IntegrationCount, and is useful for accessing the field via an interface.
func (v *CreateEnvCreateEnvironment) GetIntegrationCount() int { return v.EnvFields.IntegrationCount }

func (v *CreateEnvCreateEnvironment) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*CreateEnvCreateEnvironment
		graphql.NoUnmarshalJSON
	}
	firstPass.CreateEnvCreateEnvironment = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.EnvFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalCreateEnvCreateEnvironment struct {
	Org EnvFieldsOrgOrganization `json:"org"`

	Id string `json:"id"`

	Name string `json:"name"`

	Labels []EnvFieldsLabelsLabel `json:"labels"`

	IntentsCount int `json:"intentsCount"`

	IntegrationCount int `json:"integrationCount"`
}

func (v *CreateEnvCreateEnvironment) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *CreateEnvCreateEnvironment) __premarshalJSON() (*__premarshalCreateEnvCreateEnvironment, error) {
	var retval __premarshalCreateEnvCreateEnvironment

	retval.Org = v.EnvFields.Org
	retval.Id = v.EnvFields.Id
	retval.Name = v.EnvFields.Name
	retval.Labels = v.EnvFields.Labels
	retval.IntentsCount = v.EnvFields.IntentsCount
	retval.IntegrationCount = v.EnvFields.IntegrationCount
	return &retval, nil
}

// CreateEnvResponse is returned by CreateEnv on success.
type CreateEnvResponse struct {
	CreateEnvironment CreateEnvCreateEnvironment `json:"createEnvironment"`
}

// GetCreateEnvironment returns CreateEnvResponse.CreateEnvironment, and is useful for accessing the field via an interface.
func (v *CreateEnvResponse) GetCreateEnvironment() CreateEnvCreateEnvironment {
	return v.CreateEnvironment
}

type EnvCreateInput struct {
	Name   string       `json:"name"`
	Labels []LabelInput `json:"labels"`
}

// GetName returns EnvCreateInput.Name, and is useful for accessing the field via an interface.
func (v *EnvCreateInput) GetName() string { return v.Name }

// GetLabels returns EnvCreateInput.Labels, and is useful for accessing the field via an interface.
func (v *EnvCreateInput) GetLabels() []LabelInput { return v.Labels }

// EnvFields includes the GraphQL fields of Environment requested by the fragment EnvFields.
type EnvFields struct {
	Org              EnvFieldsOrgOrganization `json:"org"`
	Id               string                   `json:"id"`
	Name             string                   `json:"name"`
	Labels           []EnvFieldsLabelsLabel   `json:"labels"`
	IntentsCount     int                      `json:"intentsCount"`
	IntegrationCount int                      `json:"integrationCount"`
}

// GetOrg returns EnvFields.Org, and is useful for accessing the field via an interface.
func (v *EnvFields) GetOrg() EnvFieldsOrgOrganization { return v.Org }

// GetId returns EnvFields.Id, and is useful for accessing the field via an interface.
func (v *EnvFields) GetId() string { return v.Id }

// GetName returns EnvFields.Name, and is useful for accessing the field via an interface.
func (v *EnvFields) GetName() string { return v.Name }

// GetLabels returns EnvFields.Labels, and is useful for accessing the field via an interface.
func (v *EnvFields) GetLabels() []EnvFieldsLabelsLabel { return v.Labels }

// GetIntentsCount returns EnvFields.IntentsCount, and is useful for accessing the field via an interface.
func (v *EnvFields) GetIntentsCount() int { return v.IntentsCount }

// GetIntegrationCount returns EnvFields.IntegrationCount, and is useful for accessing the field via an interface.
func (v *EnvFields) GetIntegrationCount() int { return v.IntegrationCount }

// EnvFieldsLabelsLabel includes the requested fields of the GraphQL type Label.
type EnvFieldsLabelsLabel struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns EnvFieldsLabelsLabel.Key, and is useful for accessing the field via an interface.
func (v *EnvFieldsLabelsLabel) GetKey() string { return v.Key }

// GetValue returns EnvFieldsLabelsLabel.Value, and is useful for accessing the field via an interface.
func (v *EnvFieldsLabelsLabel) GetValue() string { return v.Value }

// EnvFieldsOrgOrganization includes the requested fields of the GraphQL type Organization.
type EnvFieldsOrgOrganization struct {
	Id string `json:"id"`
}

// GetId returns EnvFieldsOrgOrganization.Id, and is useful for accessing the field via an interface.
func (v *EnvFieldsOrgOrganization) GetId() string { return v.Id }

type LabelInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns LabelInput.Key, and is useful for accessing the field via an interface.
func (v *LabelInput) GetKey() string { return v.Key }

// GetValue returns LabelInput.Value, and is useful for accessing the field via an interface.
func (v *LabelInput) GetValue() string { return v.Value }

// __CreateEnvInput is used internally by genqlient
type __CreateEnvInput struct {
	Input EnvCreateInput `json:"input"`
}

// GetInput returns __CreateEnvInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateEnvInput) GetInput() EnvCreateInput { return v.Input }

func CreateEnv(
	ctx context.Context,
	client graphql.Client,
	input EnvCreateInput,
) (*CreateEnvResponse, error) {
	__input := __CreateEnvInput{
		Input: input,
	}
	var err error

	var retval CreateEnvResponse
	err = client.MakeRequest(
		ctx,
		"CreateEnv",
		`
mutation CreateEnv ($input: EnvCreateInput!) {
	createEnvironment(input: $input) {
		... EnvFields
	}
}
fragment EnvFields on Environment {
	org {
		id
	}
	id
	name
	labels {
		key
		value
	}
	intentsCount
	integrationCount
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
