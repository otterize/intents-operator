---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    helm.sh/resource-policy: keep
  creationTimestamp: null
  labels:
    app.kubernetes.io/part-of: otterize
  name: mysqlserverconfigs.k8s.otterize.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: intents-operator-webhook-service
          namespace: otterize-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: k8s.otterize.com
  names:
    kind: MySQLServerConfig
    listKind: MySQLServerConfigList
    plural: mysqlserverconfigs
    singular: mysqlserverconfig
  scope: Namespaced
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: MySQLServerConfig is the Schema for the mysqlserverconfig API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MySQLServerConfigSpec defines the desired state of MySQLServerConfig
              properties:
                address:
                  type: string
                credentials:
                  description: DatabaseCredentials defines the credentials to access the database
                  properties:
                    password:
                      description: Password is the plaintext password to access the database
                      type: string
                    secretRef:
                      description: SecretRef is a reference to a k8s secret storing the credentials
                      properties:
                        name:
                          description: Name is the name of he k8s secret storing the credentials
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace in which the secret is stored.
                            If not provided, the operator will look for the secret in the same namespace as the database ServerConfig.
                          type: string
                        passwordKey:
                          default: password
                          description: PasswordKey is the key in the secret that stores the password
                          type: string
                        usernameKey:
                          default: username
                          description: UsernameKey is the key in the secret that stores the username
                          type: string
                      type: object
                    username:
                      description: Username is the plaintext username to access the database
                      type: string
                  type: object
              required:
                - address
                - credentials
              type: object
            status:
              description: MySQLServerConfigStatus defines the observed state of MySQLServerConfig
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: MySQLServerConfig is the Schema for the mysqlserverconfig API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MySQLServerConfigSpec defines the desired state of MySQLServerConfig
              properties:
                address:
                  type: string
                credentials:
                  description: DatabaseCredentials defines the credentials to access the database
                  properties:
                    password:
                      description: Password is the plaintext password to access the database
                      type: string
                    secretRef:
                      description: SecretRef is a reference to a k8s secret storing the credentials
                      properties:
                        name:
                          description: Name is the name of he k8s secret storing the credentials
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace in which the secret is stored.
                            If not provided, the operator will look for the secret in the same namespace as the database ServerConfig.
                          type: string
                        passwordKey:
                          default: password
                          description: PasswordKey is the key in the secret that stores the password
                          type: string
                        usernameKey:
                          default: username
                          description: UsernameKey is the key in the secret that stores the username
                          type: string
                      type: object
                    username:
                      description: Username is the plaintext username to access the database
                      type: string
                  type: object
              required:
                - address
                - credentials
              type: object
            status:
              description: MySQLServerConfigStatus defines the observed state of MySQLServerConfig
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - name: v2alpha1
      schema:
        openAPIV3Schema:
          description: MySQLServerConfig is the Schema for the mysqlserverconfig API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MySQLServerConfigSpec defines the desired state of MySQLServerConfig
              properties:
                address:
                  type: string
                credentials:
                  description: DatabaseCredentials defines the credentials to access the database
                  properties:
                    password:
                      description: Password is the plaintext password to access the database
                      type: string
                    secretRef:
                      description: SecretRef is a reference to a k8s secret storing the credentials
                      properties:
                        name:
                          description: Name is the name of he k8s secret storing the credentials
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace in which the secret is stored.
                            If not provided, the operator will look for the secret in the same namespace as the database ServerConfig.
                          type: string
                        passwordKey:
                          default: password
                          description: PasswordKey is the key in the secret that stores the password
                          type: string
                        usernameKey:
                          default: username
                          description: UsernameKey is the key in the secret that stores the username
                          type: string
                      type: object
                    username:
                      description: Username is the plaintext username to access the database
                      type: string
                  type: object
              required:
                - address
                - credentials
              type: object
            status:
              description: MySQLServerConfigStatus defines the observed state of MySQLServerConfig
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
