# This kustomization.yaml is not intended to be run by itself,
# since it depends on service name and namespace that are out of this kustomize package.
# It should be run by config/default
resources:
- k8s.otterize.com_clientintents.yaml
- k8s.otterize.com_kafkaserverconfigs.yaml
- k8s.otterize.com_protectedservices.yaml
- k8s.otterize.com_postgresqlserverconfigs.yaml
- k8s.otterize.com_mysqlserverconfigs.yaml
#+kubebuilder:scaffold:crdkustomizeresource

# [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix.
# patches here are for enabling the conversion webhook for each CRD
#+kubebuilder:scaffold:crdkustomizewebhookpatch

# [CERTMANAGER] To enable cert-manager, uncomment all the sections with [CERTMANAGER] prefix.
# patches here are for enabling the CA injection for each CRD
#- patches/cainjection_in_clientintents.yaml
#+kubebuilder:scaffold:crdkustomizecainjectionpatch

# the following config is for teaching kustomize how to do kustomization for CRDs.
configurations:
- kustomizeconfig.yaml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
labels:
- includeSelectors: true
  pairs:
    app.kubernetes.io/part-of: otterize
patches:
- path: patches/webhook_in_clientintents.yaml
- path: patches/webhook_in_kafkaserverconfig.yaml
- path: patches/webhook_in_protectedservice.yaml
- path: patches/webhook_in_postgresqlserverconfig.yaml
- path: patches/webhook_in_mysqlserverconfig.yaml
- patch: |-
      - op: replace
        path: /spec/conversion/webhook/clientConfig/service/namespace
        value: otterize-system
      - op: replace
        path: /spec/conversion/webhook/clientConfig/service/name
        value: intents-operator-webhook-service
  target:
    kind: CustomResourceDefinition
- patch: |-
    - op: add
      path: /metadata/annotations
      value:
        controller-gen.kubebuilder.io/version: v0.14.0
        helm.sh/resource-policy: keep
  target:
    kind: CustomResourceDefinition
- patch: |-
    - op: add
      path: /metadata/creationTimestamp
      value: null
  target:
    kind: CustomResourceDefinition
