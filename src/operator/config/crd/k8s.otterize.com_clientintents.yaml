---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: clientintents.k8s.otterize.com
spec:
  group: k8s.otterize.com
  names:
    kind: ClientIntents
    listKind: ClientIntentsList
    plural: clientintents
    singular: clientintents
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: ClientIntents is the Schema for the intents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntentsSpec defines the desired state of ClientIntents
            properties:
              calls:
                items:
                  properties:
                    databaseResources:
                      items:
                        properties:
                          operations:
                            items:
                              enum:
                              - ALL
                              - SELECT
                              - INSERT
                              - UPDATE
                              - DELETE
                              type: string
                            type: array
                          table:
                            type: string
                        required:
                        - operations
                        - table
                        type: object
                      type: array
                    name:
                      type: string
                    resources:
                      items:
                        properties:
                          methods:
                            items:
                              enum:
                              - GET
                              - POST
                              - PUT
                              - DELETE
                              - OPTIONS
                              - TRACE
                              - PATCH
                              - CONNECT
                              type: string
                            type: array
                          path:
                            type: string
                        required:
                        - methods
                        - path
                        type: object
                      type: array
                    topics:
                      items:
                        properties:
                          name:
                            type: string
                          operations:
                            items:
                              enum:
                              - all
                              - consume
                              - produce
                              - create
                              - alter
                              - delete
                              - describe
                              - ClusterAction
                              - DescribeConfigs
                              - AlterConfigs
                              - IdempotentWrite
                              type: string
                            type: array
                        required:
                        - name
                        - operations
                        type: object
                      type: array
                    type:
                      enum:
                      - http
                      - kafka
                      - database
                      type: string
                  required:
                  - name
                  type: object
                type: array
              service:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - calls
            - service
            type: object
          status:
            description: IntentsStatus defines the observed state of ClientIntents
            properties:
              upToDate:
                description: upToDate field reflects whether the client intents have
                  successfully been applied to the cluster to the state specified
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: ClientIntents is the Schema for the intents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntentsSpec defines the desired state of ClientIntents
            properties:
              calls:
                items:
                  properties:
                    HTTPResources:
                      items:
                        properties:
                          methods:
                            items:
                              enum:
                              - GET
                              - POST
                              - PUT
                              - DELETE
                              - OPTIONS
                              - TRACE
                              - PATCH
                              - CONNECT
                              type: string
                            type: array
                          path:
                            type: string
                        required:
                        - methods
                        - path
                        type: object
                      type: array
                    awsActions:
                      items:
                        type: string
                      type: array
                    databaseResources:
                      items:
                        properties:
                          operations:
                            items:
                              enum:
                              - ALL
                              - SELECT
                              - INSERT
                              - UPDATE
                              - DELETE
                              type: string
                            type: array
                          table:
                            type: string
                        required:
                        - operations
                        - table
                        type: object
                      type: array
                    kafkaTopics:
                      items:
                        properties:
                          name:
                            type: string
                          operations:
                            items:
                              enum:
                              - all
                              - consume
                              - produce
                              - create
                              - alter
                              - delete
                              - describe
                              - ClusterAction
                              - DescribeConfigs
                              - AlterConfigs
                              - IdempotentWrite
                              type: string
                            type: array
                        required:
                        - name
                        - operations
                        type: object
                      type: array
                    name:
                      type: string
                    type:
                      enum:
                      - http
                      - kafka
                      - database
                      - aws
                      type: string
                  required:
                  - name
                  type: object
                type: array
              service:
                properties:
                  createServiceAccount:
                    description: 'ServiceAccount binds together: * a name, understood
                      by users, and perhaps by peripheral systems, for an identity
                      * a principal that can be authenticated and authorized * a set
                      of secrets'
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      automountServiceAccountToken:
                        description: AutomountServiceAccountToken indicates whether
                          pods running as this service account should have an API
                          token automatically mounted. Can be overridden at the pod
                          level.
                        type: boolean
                      imagePullSecrets:
                        description: 'ImagePullSecrets is a list of references to
                          secrets in the same namespace to use for pulling any images
                          in pods that reference this ServiceAccount. ImagePullSecrets
                          are distinct from Secrets because Secrets can be mounted
                          in the pod, but ImagePullSecrets are only accessed by the
                          kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod'
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                        type: object
                      secrets:
                        description: 'Secrets is a list of the secrets in the same
                          namespace that pods running using this ServiceAccount are
                          allowed to use. Pods are only limited to this list if this
                          service account has a "kubernetes.io/enforce-mountable-secrets"
                          annotation set to "true". This field should not be used
                          to find auto-generated service account token secrets for
                          use outside of pods. Instead, tokens can be requested directly
                          using the TokenRequest API, or service account token secrets
                          can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret'
                        items:
                          description: "ObjectReference contains enough information
                            to let you inspect or modify the referred object. ---
                            New uses of this type are discouraged because of difficulty
                            describing its usage when embedded in APIs. 1. Ignored
                            fields.  It includes many fields which are not generally
                            honored.  For instance, ResourceVersion and FieldPath
                            are both very rarely valid in actual usage. 2. Invalid
                            usage help.  It is impossible to add specific help for
                            individual usage.  In most embedded usages, there are
                            particular restrictions like, \"must refer only to types
                            A and B\" or \"UID not honored\" or \"name must be restricted\".
                            Those cannot be well described when embedded. 3. Inconsistent
                            validation.  Because the usages are different, the validation
                            rules are different by usage, which makes it hard for
                            users to predict what will happen. 4. The fields are both
                            imprecise and overly precise.  Kind is not a precise mapping
                            to a URL. This can produce ambiguity during interpretation
                            and require a REST mapping.  In most cases, the dependency
                            is on the group,resource tuple and the version of the
                            actual struct is irrelevant. 5. We cannot easily change
                            it.  Because this type is embedded in many locations,
                            updates to this type will affect numerous schemas.  Don't
                            make new APIs embed an underspecified API type they do
                            not control. \n Instead of using this type, create a locally
                            provided and used type that is well-focused on your reference.
                            For example, ServiceReferences for admission registration:
                            https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                            ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        type: array
                    type: object
                  name:
                    type: string
                required:
                - createServiceAccount
                - name
                type: object
            required:
            - calls
            - service
            type: object
          status:
            description: IntentsStatus defines the observed state of ClientIntents
            properties:
              upToDate:
                description: upToDate field reflects whether the client intents have
                  successfully been applied to the cluster to the state specified
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
