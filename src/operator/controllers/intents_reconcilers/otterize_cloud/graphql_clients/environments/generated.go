// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package environments

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// AddNamespacesToEnvAddEnvironmentNamespacesEnvironment includes the requested fields of the GraphQL type Environment.
type AddNamespacesToEnvAddEnvironmentNamespacesEnvironment struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns AddNamespacesToEnvAddEnvironmentNamespacesEnvironment.Id, and is useful for accessing the field via an interface.
func (v *AddNamespacesToEnvAddEnvironmentNamespacesEnvironment) GetId() string { return v.Id }

// GetName returns AddNamespacesToEnvAddEnvironmentNamespacesEnvironment.Name, and is useful for accessing the field via an interface.
func (v *AddNamespacesToEnvAddEnvironmentNamespacesEnvironment) GetName() string { return v.Name }

// AddNamespacesToEnvResponse is returned by AddNamespacesToEnv on success.
type AddNamespacesToEnvResponse struct {
	AddEnvironmentNamespaces AddNamespacesToEnvAddEnvironmentNamespacesEnvironment `json:"addEnvironmentNamespaces"`
}

// GetAddEnvironmentNamespaces returns AddNamespacesToEnvResponse.AddEnvironmentNamespaces, and is useful for accessing the field via an interface.
func (v *AddNamespacesToEnvResponse) GetAddEnvironmentNamespaces() AddNamespacesToEnvAddEnvironmentNamespacesEnvironment {
	return v.AddEnvironmentNamespaces
}

// CreateKubernetesEnvironmentMeMeMutation includes the requested fields of the GraphQL type MeMutation.
type CreateKubernetesEnvironmentMeMeMutation struct {
	CreateKubernetesEnvironment CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment `json:"createKubernetesEnvironment"`
}

// GetCreateKubernetesEnvironment returns CreateKubernetesEnvironmentMeMeMutation.CreateKubernetesEnvironment, and is useful for accessing the field via an interface.
func (v *CreateKubernetesEnvironmentMeMeMutation) GetCreateKubernetesEnvironment() CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment {
	return v.CreateKubernetesEnvironment
}

// CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment includes the requested fields of the GraphQL type Environment.
type CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment struct {
	Name string `json:"name"`
	Id   string `json:"id"`
}

// GetName returns CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment.Name, and is useful for accessing the field via an interface.
func (v *CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment) GetName() string {
	return v.Name
}

// GetId returns CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment.Id, and is useful for accessing the field via an interface.
func (v *CreateKubernetesEnvironmentMeMeMutationCreateKubernetesEnvironment) GetId() string {
	return v.Id
}

// CreateKubernetesEnvironmentResponse is returned by CreateKubernetesEnvironment on success.
type CreateKubernetesEnvironmentResponse struct {
	Me CreateKubernetesEnvironmentMeMeMutation `json:"me"`
}

// GetMe returns CreateKubernetesEnvironmentResponse.Me, and is useful for accessing the field via an interface.
func (v *CreateKubernetesEnvironmentResponse) GetMe() CreateKubernetesEnvironmentMeMeMutation {
	return v.Me
}

// EnvironmentFields includes the GraphQL fields of Environment requested by the fragment EnvironmentFields.
type EnvironmentFields struct {
	Id           string                                           `json:"id"`
	Organization EnvironmentFieldsOrganization                    `json:"organization"`
	Name         string                                           `json:"name"`
	Labels       []EnvironmentFieldsLabelsLabel                   `json:"labels"`
	Namespaces   []EnvironmentFieldsNamespacesClusterToNamespaces `json:"namespaces"`
}

// GetId returns EnvironmentFields.Id, and is useful for accessing the field via an interface.
func (v *EnvironmentFields) GetId() string { return v.Id }

// GetOrganization returns EnvironmentFields.Organization, and is useful for accessing the field via an interface.
func (v *EnvironmentFields) GetOrganization() EnvironmentFieldsOrganization { return v.Organization }

// GetName returns EnvironmentFields.Name, and is useful for accessing the field via an interface.
func (v *EnvironmentFields) GetName() string { return v.Name }

// GetLabels returns EnvironmentFields.Labels, and is useful for accessing the field via an interface.
func (v *EnvironmentFields) GetLabels() []EnvironmentFieldsLabelsLabel { return v.Labels }

// GetNamespaces returns EnvironmentFields.Namespaces, and is useful for accessing the field via an interface.
func (v *EnvironmentFields) GetNamespaces() []EnvironmentFieldsNamespacesClusterToNamespaces {
	return v.Namespaces
}

// EnvironmentFieldsLabelsLabel includes the requested fields of the GraphQL type Label.
type EnvironmentFieldsLabelsLabel struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns EnvironmentFieldsLabelsLabel.Key, and is useful for accessing the field via an interface.
func (v *EnvironmentFieldsLabelsLabel) GetKey() string { return v.Key }

// GetValue returns EnvironmentFieldsLabelsLabel.Value, and is useful for accessing the field via an interface.
func (v *EnvironmentFieldsLabelsLabel) GetValue() string { return v.Value }

// EnvironmentFieldsNamespacesClusterToNamespaces includes the requested fields of the GraphQL type ClusterToNamespaces.
type EnvironmentFieldsNamespacesClusterToNamespaces struct {
	Cluster    string   `json:"cluster"`
	Namespaces []string `json:"namespaces"`
}

// GetCluster returns EnvironmentFieldsNamespacesClusterToNamespaces.Cluster, and is useful for accessing the field via an interface.
func (v *EnvironmentFieldsNamespacesClusterToNamespaces) GetCluster() string { return v.Cluster }

// GetNamespaces returns EnvironmentFieldsNamespacesClusterToNamespaces.Namespaces, and is useful for accessing the field via an interface.
func (v *EnvironmentFieldsNamespacesClusterToNamespaces) GetNamespaces() []string {
	return v.Namespaces
}

// EnvironmentFieldsOrganization includes the requested fields of the GraphQL type Organization.
type EnvironmentFieldsOrganization struct {
	Id string `json:"id"`
}

// GetId returns EnvironmentFieldsOrganization.Id, and is useful for accessing the field via an interface.
func (v *EnvironmentFieldsOrganization) GetId() string { return v.Id }

type EnvironmentUpdate struct {
	Name   string       `json:"name"`
	Labels []LabelInput `json:"labels"`
}

// GetName returns EnvironmentUpdate.Name, and is useful for accessing the field via an interface.
func (v *EnvironmentUpdate) GetName() string { return v.Name }

// GetLabels returns EnvironmentUpdate.Labels, and is useful for accessing the field via an interface.
func (v *EnvironmentUpdate) GetLabels() []LabelInput { return v.Labels }

// KubernetesEnvironmentMe includes the requested fields of the GraphQL type Me.
type KubernetesEnvironmentMe struct {
	KubernetesEnvironment KubernetesEnvironmentMeKubernetesEnvironment `json:"kubernetesEnvironment"`
}

// GetKubernetesEnvironment returns KubernetesEnvironmentMe.KubernetesEnvironment, and is useful for accessing the field via an interface.
func (v *KubernetesEnvironmentMe) GetKubernetesEnvironment() KubernetesEnvironmentMeKubernetesEnvironment {
	return v.KubernetesEnvironment
}

// KubernetesEnvironmentMeKubernetesEnvironment includes the requested fields of the GraphQL type Environment.
type KubernetesEnvironmentMeKubernetesEnvironment struct {
	Name string `json:"name"`
	Id   string `json:"id"`
}

// GetName returns KubernetesEnvironmentMeKubernetesEnvironment.Name, and is useful for accessing the field via an interface.
func (v *KubernetesEnvironmentMeKubernetesEnvironment) GetName() string { return v.Name }

// GetId returns KubernetesEnvironmentMeKubernetesEnvironment.Id, and is useful for accessing the field via an interface.
func (v *KubernetesEnvironmentMeKubernetesEnvironment) GetId() string { return v.Id }

// KubernetesEnvironmentResponse is returned by KubernetesEnvironment on success.
type KubernetesEnvironmentResponse struct {
	Me KubernetesEnvironmentMe `json:"me"`
}

// GetMe returns KubernetesEnvironmentResponse.Me, and is useful for accessing the field via an interface.
func (v *KubernetesEnvironmentResponse) GetMe() KubernetesEnvironmentMe { return v.Me }

type LabelInput struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetKey returns LabelInput.Key, and is useful for accessing the field via an interface.
func (v *LabelInput) GetKey() string { return v.Key }

// GetValue returns LabelInput.Value, and is useful for accessing the field via an interface.
func (v *LabelInput) GetValue() string { return v.Value }

// UpdateEnvResponse is returned by UpdateEnv on success.
type UpdateEnvResponse struct {
	UpdateEnvironment UpdateEnvUpdateEnvironment `json:"updateEnvironment"`
}

// GetUpdateEnvironment returns UpdateEnvResponse.UpdateEnvironment, and is useful for accessing the field via an interface.
func (v *UpdateEnvResponse) GetUpdateEnvironment() UpdateEnvUpdateEnvironment {
	return v.UpdateEnvironment
}

// UpdateEnvUpdateEnvironment includes the requested fields of the GraphQL type Environment.
type UpdateEnvUpdateEnvironment struct {
	EnvironmentFields `json:"-"`
}

// GetId returns UpdateEnvUpdateEnvironment.Id, and is useful for accessing the field via an interface.
func (v *UpdateEnvUpdateEnvironment) GetId() string { return v.EnvironmentFields.Id }

// GetOrganization returns UpdateEnvUpdateEnvironment.Organization, and is useful for accessing the field via an interface.
func (v *UpdateEnvUpdateEnvironment) GetOrganization() EnvironmentFieldsOrganization {
	return v.EnvironmentFields.Organization
}

// GetName returns UpdateEnvUpdateEnvironment.Name, and is useful for accessing the field via an interface.
func (v *UpdateEnvUpdateEnvironment) GetName() string { return v.EnvironmentFields.Name }

// GetLabels returns UpdateEnvUpdateEnvironment.Labels, and is useful for accessing the field via an interface.
func (v *UpdateEnvUpdateEnvironment) GetLabels() []EnvironmentFieldsLabelsLabel {
	return v.EnvironmentFields.Labels
}

// GetNamespaces returns UpdateEnvUpdateEnvironment.Namespaces, and is useful for accessing the field via an interface.
func (v *UpdateEnvUpdateEnvironment) GetNamespaces() []EnvironmentFieldsNamespacesClusterToNamespaces {
	return v.EnvironmentFields.Namespaces
}

func (v *UpdateEnvUpdateEnvironment) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateEnvUpdateEnvironment
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateEnvUpdateEnvironment = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.EnvironmentFields)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateEnvUpdateEnvironment struct {
	Id string `json:"id"`

	Organization EnvironmentFieldsOrganization `json:"organization"`

	Name string `json:"name"`

	Labels []EnvironmentFieldsLabelsLabel `json:"labels"`

	Namespaces []EnvironmentFieldsNamespacesClusterToNamespaces `json:"namespaces"`
}

func (v *UpdateEnvUpdateEnvironment) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateEnvUpdateEnvironment) __premarshalJSON() (*__premarshalUpdateEnvUpdateEnvironment, error) {
	var retval __premarshalUpdateEnvUpdateEnvironment

	retval.Id = v.EnvironmentFields.Id
	retval.Organization = v.EnvironmentFields.Organization
	retval.Name = v.EnvironmentFields.Name
	retval.Labels = v.EnvironmentFields.Labels
	retval.Namespaces = v.EnvironmentFields.Namespaces
	return &retval, nil
}

// __AddNamespacesToEnvInput is used internally by genqlient
type __AddNamespacesToEnvInput struct {
	Id         string   `json:"id"`
	Namespaces []string `json:"namespaces"`
}

// GetId returns __AddNamespacesToEnvInput.Id, and is useful for accessing the field via an interface.
func (v *__AddNamespacesToEnvInput) GetId() string { return v.Id }

// GetNamespaces returns __AddNamespacesToEnvInput.Namespaces, and is useful for accessing the field via an interface.
func (v *__AddNamespacesToEnvInput) GetNamespaces() []string { return v.Namespaces }

// __UpdateEnvInput is used internally by genqlient
type __UpdateEnvInput struct {
	Id     string            `json:"id"`
	Update EnvironmentUpdate `json:"update"`
}

// GetId returns __UpdateEnvInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateEnvInput) GetId() string { return v.Id }

// GetUpdate returns __UpdateEnvInput.Update, and is useful for accessing the field via an interface.
func (v *__UpdateEnvInput) GetUpdate() EnvironmentUpdate { return v.Update }

func AddNamespacesToEnv(
	ctx context.Context,
	client graphql.Client,
	id string,
	namespaces []string,
) (*AddNamespacesToEnvResponse, error) {
	__input := __AddNamespacesToEnvInput{
		Id:         id,
		Namespaces: namespaces,
	}
	var err error

	var retval AddNamespacesToEnvResponse
	err = client.MakeRequest(
		ctx,
		"AddNamespacesToEnv",
		`
mutation AddNamespacesToEnv ($id: ID!, $namespaces: [String!]) {
	addEnvironmentNamespaces(id: $id, namespaces: $namespaces) {
		id
		name
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func CreateKubernetesEnvironment(
	ctx context.Context,
	client graphql.Client,
) (*CreateKubernetesEnvironmentResponse, error) {
	var err error

	var retval CreateKubernetesEnvironmentResponse
	err = client.MakeRequest(
		ctx,
		"CreateKubernetesEnvironment",
		`
mutation CreateKubernetesEnvironment {
	me {
		createKubernetesEnvironment {
			name
			id
		}
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

func KubernetesEnvironment(
	ctx context.Context,
	client graphql.Client,
) (*KubernetesEnvironmentResponse, error) {
	var err error

	var retval KubernetesEnvironmentResponse
	err = client.MakeRequest(
		ctx,
		"KubernetesEnvironment",
		`
query KubernetesEnvironment {
	me {
		kubernetesEnvironment {
			name
			id
		}
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}

func UpdateEnv(
	ctx context.Context,
	client graphql.Client,
	id string,
	update EnvironmentUpdate,
) (*UpdateEnvResponse, error) {
	__input := __UpdateEnvInput{
		Id:     id,
		Update: update,
	}
	var err error

	var retval UpdateEnvResponse
	err = client.MakeRequest(
		ctx,
		"UpdateEnv",
		`
mutation UpdateEnv ($id: ID!, $update: EnvironmentUpdate!) {
	updateEnvironment(id: $id, update: $update) {
		... EnvironmentFields
	}
}
fragment EnvironmentFields on Environment {
	id
	organization {
		id
	}
	name
	labels {
		key
		value
	}
	namespaces {
		cluster
		namespaces
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
