// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package kubernetes

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ReportKubernetesNamespaceResponse is returned by ReportKubernetesNamespace on success.
type ReportKubernetesNamespaceResponse struct {
	ReportKubernetesNamespace bool `json:"reportKubernetesNamespace"`
}

// GetReportKubernetesNamespace returns ReportKubernetesNamespaceResponse.ReportKubernetesNamespace, and is useful for accessing the field via an interface.
func (v *ReportKubernetesNamespaceResponse) GetReportKubernetesNamespace() bool {
	return v.ReportKubernetesNamespace
}

// __ReportKubernetesNamespaceInput is used internally by genqlient
type __ReportKubernetesNamespaceInput struct {
	Namespace string `json:"namespace"`
}

// GetNamespace returns __ReportKubernetesNamespaceInput.Namespace, and is useful for accessing the field via an interface.
func (v *__ReportKubernetesNamespaceInput) GetNamespace() string { return v.Namespace }

func ReportKubernetesNamespace(
	ctx context.Context,
	client graphql.Client,
	namespace string,
) (*ReportKubernetesNamespaceResponse, error) {
	req := &graphql.Request{
		OpName: "ReportKubernetesNamespace",
		Query: `
mutation ReportKubernetesNamespace ($namespace: String!) {
	reportKubernetesNamespace(namespace: $namespace)
}
`,
		Variables: &__ReportKubernetesNamespaceInput{
			Namespace: namespace,
		},
	}
	var err error

	var data ReportKubernetesNamespaceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
