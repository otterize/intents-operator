// Code generated by MockGen. DO NOT EDIT.
// Source: ../istiopolicy/creator.go

// Package intentsreconcilersmocks is a generated GoMock package.
package intentsreconcilersmocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/otterize/intents-operator/src/operator/api/v1alpha2"
)

// MockCreatorInterface is a mock of CreatorInterface interface.
type MockCreatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorInterfaceMockRecorder
}

// MockCreatorInterfaceMockRecorder is the mock recorder for MockCreatorInterface.
type MockCreatorInterfaceMockRecorder struct {
	mock *MockCreatorInterface
}

// NewMockCreatorInterface creates a new mock instance.
func NewMockCreatorInterface(ctrl *gomock.Controller) *MockCreatorInterface {
	mock := &MockCreatorInterface{ctrl: ctrl}
	mock.recorder = &MockCreatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreatorInterface) EXPECT() *MockCreatorInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreatorInterface) Create(ctx context.Context, clientIntents *v1alpha2.ClientIntents, clientServiceAccount string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, clientIntents, clientServiceAccount)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCreatorInterfaceMockRecorder) Create(ctx, clientIntents, clientServiceAccount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreatorInterface)(nil).Create), ctx, clientIntents, clientServiceAccount)
}

// DeleteAll mocks base method.
func (m *MockCreatorInterface) DeleteAll(ctx context.Context, clientIntents *v1alpha2.ClientIntents) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAll", ctx, clientIntents)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAll indicates an expected call of DeleteAll.
func (mr *MockCreatorInterfaceMockRecorder) DeleteAll(ctx, clientIntents interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAll", reflect.TypeOf((*MockCreatorInterface)(nil).DeleteAll), ctx, clientIntents)
}

// UpdateIntentsStatus mocks base method.
func (m *MockCreatorInterface) UpdateIntentsStatus(ctx context.Context, clientIntents *v1alpha2.ClientIntents, clientServiceAccount string, missingSideCar bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateIntentsStatus", ctx, clientIntents, clientServiceAccount, missingSideCar)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateIntentsStatus indicates an expected call of UpdateIntentsStatus.
func (mr *MockCreatorInterfaceMockRecorder) UpdateIntentsStatus(ctx, clientIntents, clientServiceAccount, missingSideCar interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateIntentsStatus", reflect.TypeOf((*MockCreatorInterface)(nil).UpdateIntentsStatus), ctx, clientIntents, clientServiceAccount, missingSideCar)
}

// UpdateServerSidecar mocks base method.
func (m *MockCreatorInterface) UpdateServerSidecar(ctx context.Context, clientIntents *v1alpha2.ClientIntents, serverName string, missingSideCar bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServerSidecar", ctx, clientIntents, serverName, missingSideCar)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateServerSidecar indicates an expected call of UpdateServerSidecar.
func (mr *MockCreatorInterfaceMockRecorder) UpdateServerSidecar(ctx, clientIntents, serverName, missingSideCar interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServerSidecar", reflect.TypeOf((*MockCreatorInterface)(nil).UpdateServerSidecar), ctx, clientIntents, serverName, missingSideCar)
}
