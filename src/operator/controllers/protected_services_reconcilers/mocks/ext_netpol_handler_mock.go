// Code generated by MockGen. DO NOT EDIT.
// Source: ./default_deny.go

// Package protectedservicesmock is a generated GoMock package.
package protectedservicesmock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockExternalNepolHandler is a mock of ExternalNepolHandler interface.
type MockExternalNepolHandler struct {
	ctrl     *gomock.Controller
	recorder *MockExternalNepolHandlerMockRecorder
}

// MockExternalNepolHandlerMockRecorder is the mock recorder for MockExternalNepolHandler.
type MockExternalNepolHandlerMockRecorder struct {
	mock *MockExternalNepolHandler
}

// NewMockExternalNepolHandler creates a new mock instance.
func NewMockExternalNepolHandler(ctrl *gomock.Controller) *MockExternalNepolHandler {
	mock := &MockExternalNepolHandler{ctrl: ctrl}
	mock.recorder = &MockExternalNepolHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalNepolHandler) EXPECT() *MockExternalNepolHandlerMockRecorder {
	return m.recorder
}

// HandleAllPods mocks base method.
func (m *MockExternalNepolHandler) HandleAllPods(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleAllPods", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleAllPods indicates an expected call of HandleAllPods.
func (mr *MockExternalNepolHandlerMockRecorder) HandleAllPods(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAllPods", reflect.TypeOf((*MockExternalNepolHandler)(nil).HandleAllPods), ctx)
}

// HandlePodsByNamespace mocks base method.
func (m *MockExternalNepolHandler) HandlePodsByNamespace(ctx context.Context, namespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandlePodsByNamespace", ctx, namespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandlePodsByNamespace indicates an expected call of HandlePodsByNamespace.
func (mr *MockExternalNepolHandlerMockRecorder) HandlePodsByNamespace(ctx, namespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandlePodsByNamespace", reflect.TypeOf((*MockExternalNepolHandler)(nil).HandlePodsByNamespace), ctx, namespace)
}
