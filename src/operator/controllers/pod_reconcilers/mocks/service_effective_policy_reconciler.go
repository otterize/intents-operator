// Code generated by MockGen. DO NOT EDIT.
// Source: pods.go

// Package podreconcilersmocks is a generated GoMock package.
package podreconcilersmocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGroupReconciler is a mock of GroupReconciler interface.
type MockGroupReconciler struct {
	ctrl     *gomock.Controller
	recorder *MockGroupReconcilerMockRecorder
}

// MockGroupReconcilerMockRecorder is the mock recorder for MockGroupReconciler.
type MockGroupReconcilerMockRecorder struct {
	mock *MockGroupReconciler
}

// NewMockGroupReconciler creates a new mock instance.
func NewMockGroupReconciler(ctrl *gomock.Controller) *MockGroupReconciler {
	mock := &MockGroupReconciler{ctrl: ctrl}
	mock.recorder = &MockGroupReconcilerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupReconciler) EXPECT() *MockGroupReconcilerMockRecorder {
	return m.recorder
}

// Reconcile mocks base method.
func (m *MockGroupReconciler) Reconcile(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reconcile", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Reconcile indicates an expected call of Reconcile.
func (mr *MockGroupReconcilerMockRecorder) Reconcile(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reconcile", reflect.TypeOf((*MockGroupReconciler)(nil).Reconcile), ctx)
}
